name: main

on:
  push:
    paths-ignore:
      - '.github/workflows/test-*'
      - 'test/alpine/**'
      - 'test/debian/**'
      - 'test/fedora/**'
      - 'README.md'
  pull_request:
    
jobs:
  build:
    name: Build

    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.0.2

      -
        name: Set up Go
        uses: actions/setup-go@v3.0.0
        with:
          go-version: '1.18.5'

      - 
        name: Set up Go cache
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - 
        name: Check Go format
        run: |
          gofmtout=$(gofmt -l .); [ -z "${gofmtout}" ] || { echo "Detected malformatted go files. Run 'go fmt ./..." >&2; echo $gofmtout; exit 1; }
      
      -
        name: Get dependencies
        run: |
          go mod download

      -
        name: Setup Terraform executable cache
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: ~/terraform/bin
          key: ${{ runner.os }}-terraform-bin-1.2.8

      -
        name: Download Terraform CLI
        id: terraform_cli
        run: |
          mkdir -p "$HOME/terraform/bin"
          if [ ! -f "$HOME/terraform/bin/terraform" ]; then
            wget -O '${{ runner.temp }}/terraform_1.2.8_linux_amd64.zip' 'https://releases.hashicorp.com/terraform/1.2.8/terraform_1.2.8_linux_amd64.zip'
            unzip '${{ runner.temp }}/terraform_1.2.8_linux_amd64.zip' -d "$HOME/terraform/bin"
          fi
          chmod +x "$HOME/terraform/bin/terraform"
          $HOME/terraform/bin/terraform version
          echo "::set-output name=path::$HOME/terraform/bin/terraform"

      - 
        name: Verify generated files
        run: |
          go generate ./...;
          git diff --compact-summary --exit-code || (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

      -
        name: Build
        run: |
          go build -v .
      
      -
        name: Run unit tests
        run: |
          go test -v ./...
  
  release:
    name: Release
    
    # only on push events and if commit has version tag
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.0.2

      -
        name: Unshallow
        run: git fetch --prune --unshallow

      -
        name: Set up Go
        uses: actions/setup-go@v3.0.0
        with:
          go-version: '1.21'

      -
        name: Import GPG private key
        id: import_gpg_private_key
        uses: crazy-max/ghaction-import-gpg@v4.4.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.9.1
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg_private_key.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}